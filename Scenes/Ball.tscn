[gd_scene load_steps=6 format=3 uid="uid://cqrsglop410lf"]

[sub_resource type="GDScript" id="GDScript_q3xrv"]
script/source = "extends CharacterBody3D

@export var normalSpeed : Curve;

const tableHitTime : float = 0.58

var bounceY : float = 3.0

var direction : int = -1


var speed : float = 3.5

var falling : bool = false


var hitBeat : float = 0.0

var beatDur1 : float = 4.0
var beatDur2 : float = 4.0

var curvePosition : float = 0.0

# Use a curve in order to determine the height of the ball. Also use a variable to see how far along the curve the ball is. Use a Max fucntion in order to pick the curve as the highest or else 0. Damn this is harder than I thought lol.

func _physics_process(delta):
	_physicsTick()


func _physicsTick():
	
	var hitPosition1 = GlobalValues.posFromBeat(hitBeat,beatDur1,true)
	
	if hitPosition1 >= beatDur1:
		var hitPosition2 = GlobalValues.posFromBeat(hitBeat + beatDur1, beatDur2,true)
		curvePosition = tableHitTime + hitPosition2 * (1 - tableHitTime)
		
		
	else:
		curvePosition = hitPosition1 * tableHitTime
	
	print(curvePosition / 4)
	
	get_parent().progress_ratio = curvePosition / 4
	
	





"

[sub_resource type="Curve" id="Curve_dqx15"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.510526, 1), 0.0, 0.0, 0, 0, Vector2(0.963158, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="SphereShape3D" id="SphereShape3D_dlq2d"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_r0lnq"]
albedo_color = Color(1, 1, 0, 1)

[sub_resource type="Curve3D" id="Curve3D_2py8k"]
bake_interval = 0.02
_data = {
"points": PackedVector3Array(0, 0, 0, 0, 1.56414, -2.82332, 5.56633e-05, 0.0730383, -0.0433207, 0, 0, 0, 0, 0, 0, 5.56633e-05, 0.220598, -5.34566, 0, 0.826338, 1.62316, 0, 0, 0, 5.56633e-05, 0.151737, -9.27076),
"tilts": PackedFloat32Array(0, 0, 0)
}
point_count = 3

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_q3xrv")
normalSpeed = SubResource("Curve_dqx15")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0)
shape = SubResource("SphereShape3D_dlq2d")

[node name="CSGSphere3D" type="CSGSphere3D" parent="."]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0)
material = SubResource("StandardMaterial3D_r0lnq")

[node name="Path3D" type="Path3D" parent="."]
curve = SubResource("Curve3D_2py8k")
