[gd_scene load_steps=5 format=3 uid="uid://bth72l4vlgjko"]

[sub_resource type="GDScript" id="GDScript_q3xrv"]
script/source = "extends CharacterBody3D

@export var normalSpeed : Curve;


var bounceY : float = 3.0

var direction : int = -1


var speed : float = 3.5

var falling : bool = false

var beatDur1 = 1.0

var beatDur = 1.0


# Use a curve in order to determine the height of the ball. Also use a variable to see how far along the curve the ball is. Use a Max fucntion in order to pick the curve as the highest or else 0. Damn this is harder than I thought lol.

func _physics_process(delta):
	_physicsTick()


func _physicsTick():
	
	
	
	print(GlobalValues.posFromBeat(2,1.0,true))
	





"

[sub_resource type="Curve" id="Curve_dqx15"]
_data = [Vector2(0, 0), 0.0, 0.0, 0, 0, Vector2(0.510526, 1), 0.0, 0.0, 0, 0, Vector2(0.963158, 0), 0.0, 0.0, 0, 0]
point_count = 3

[sub_resource type="SphereShape3D" id="SphereShape3D_dlq2d"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_r0lnq"]
albedo_color = Color(1, 1, 0, 1)

[node name="CharacterBody3D" type="CharacterBody3D"]
script = SubResource("GDScript_q3xrv")
normalSpeed = SubResource("Curve_dqx15")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0)
shape = SubResource("SphereShape3D_dlq2d")

[node name="CSGSphere3D" type="CSGSphere3D" parent="."]
transform = Transform3D(0.2, 0, 0, 0, 0.2, 0, 0, 0, 0.2, 0, 0, 0)
material = SubResource("StandardMaterial3D_r0lnq")
