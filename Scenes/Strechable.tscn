[gd_scene load_steps=5 format=3 uid="uid://yv1xyjcs4f1m"]

[ext_resource type="Script" path="res://Scenes/Strechable.gd" id="1_3a0j6"]
[ext_resource type="Texture2D" uid="uid://crtj8r0jh3qo5" path="res://Sprites/Stretch.png" id="1_npquj"]

[sub_resource type="Shader" id="Shader_3xs4k"]
code = "shader_type canvas_item;
uniform float scaleX = 1.0;

void vertex() {
	// Called for every vertex the material is visible on.
}

void fragment() {
	if (UV.x < 22.0/256.0)
	{
		COLOR = texture(TEXTURE,vec2(UV.x * scaleX,UV.y));
		
	}
	else
	{
		COLOR = texture(TEXTURE,vec2(UV.x * 1.0,UV.y));
	}
}

//void light() {
	// Called for every pixel for every light affecting the CanvasItem.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_3exiw"]
shader = SubResource("Shader_3xs4k")
shader_parameter/scaleX = 1.0

[node name="Strechable" type="Node2D"]
script = ExtResource("1_3a0j6")

[node name="Stretch" type="Sprite2D" parent="."]
texture_filter = 1
material = SubResource("ShaderMaterial_3exiw")
texture = ExtResource("1_npquj")
hframes = 3

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(1.63, 1.63)
